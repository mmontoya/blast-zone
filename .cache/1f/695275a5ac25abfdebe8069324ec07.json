{"id":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","dependencies":[{"name":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/package.json","includedInParent":true,"mtime":1611559171409},{"name":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/package.json","includedInParent":true,"mtime":1609219379102},{"name":"./implementations/fixed-density","loc":{"line":3,"column":30},"parent":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","resolved":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/implementations/fixed-density.js"},{"name":"./implementations/variable-density","loc":{"line":4,"column":33},"parent":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","resolved":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/implementations/variable-density.js"}],"generated":{"js":"\"use strict\";\n\nvar FixedDensityPDS = require('./implementations/fixed-density');\nvar VariableDensityPDS = require('./implementations/variable-density');\n\n/**\n * PoissonDiskSampling constructor\n * @param {object} options Options\n * @param {Array} options.shape Shape of the space\n * @param {float} options.minDistance Minimum distance between each points\n * @param {float} [options.maxDistance] Maximum distance between each points, defaults to minDistance * 2\n * @param {int} [options.tries] Number of times the algorithm will try to place a point in the neighbourhood of another points, defaults to 30\n * @param {function|null} [options.distanceFunction] Function to control the distance between each point depending on their position, must return a value between 0 and 1\n * @param {function|null} [options.bias] When using a distanceFunction, will indicate which point constraint takes priority when evaluating two points (0 for the lowest distance, 1 for the highest distance), defaults to 0\n * @param {function|null} [rng] RNG function, defaults to Math.random\n * @constructor\n */\nfunction PoissonDiskSampling (options, rng) {\n    this.shape = options.shape;\n\n    if (typeof options.distanceFunction === 'function') {\n        this.implementation = new VariableDensityPDS(options, rng);\n    } else {\n        this.implementation = new FixedDensityPDS(options, rng);\n    }\n}\n\nPoissonDiskSampling.prototype.implementation = null;\n\n/**\n * Add a totally random point in the grid\n * @returns {Array} The point added to the grid\n */\nPoissonDiskSampling.prototype.addRandomPoint = function () {\n    return this.implementation.addRandomPoint();\n};\n\n/**\n * Add a given point to the grid\n * @param {Array} point Point\n * @returns {Array|null} The point added to the grid, null if the point is out of the bound or not of the correct dimension\n */\nPoissonDiskSampling.prototype.addPoint = function (point) {\n    return this.implementation.addPoint(point);\n};\n\n/**\n * Try to generate a new point in the grid, returns null if it wasn't possible\n * @returns {Array|null} The added point or null\n */\nPoissonDiskSampling.prototype.next = function () {\n    return this.implementation.next();\n};\n\n/**\n * Automatically fill the grid, adding a random point to start the process if needed.\n * Will block the thread, probably best to use it in a web worker or child process.\n * @returns {Array[]} Sample points\n */\nPoissonDiskSampling.prototype.fill = function () {\n    return this.implementation.fill();\n};\n\n/**\n * Get all the points in the grid.\n * @returns {Array[]} Sample points\n */\nPoissonDiskSampling.prototype.getAllPoints = function () {\n    return this.implementation.getAllPoints();\n};\n\n/**\n * Get all the points in the grid along with the result of the distance function.\n * @throws Will throw an error if a distance function was not provided to the constructor.\n * @returns {Array[]} Sample points with their distance function result\n */\nPoissonDiskSampling.prototype.getAllPointsWithDistance = function () {\n    return this.implementation.getAllPointsWithDistance();\n};\n\n/**\n * Reinitialize the grid as well as the internal state\n */\nPoissonDiskSampling.prototype.reset = function () {\n    this.implementation.reset();\n};\n\nmodule.exports = PoissonDiskSampling;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}}],"sources":{"node_modules/poisson-disk-sampling/src/poisson-disk-sampling.js":"\"use strict\";\n\nvar FixedDensityPDS = require('./implementations/fixed-density');\nvar VariableDensityPDS = require('./implementations/variable-density');\n\n/**\n * PoissonDiskSampling constructor\n * @param {object} options Options\n * @param {Array} options.shape Shape of the space\n * @param {float} options.minDistance Minimum distance between each points\n * @param {float} [options.maxDistance] Maximum distance between each points, defaults to minDistance * 2\n * @param {int} [options.tries] Number of times the algorithm will try to place a point in the neighbourhood of another points, defaults to 30\n * @param {function|null} [options.distanceFunction] Function to control the distance between each point depending on their position, must return a value between 0 and 1\n * @param {function|null} [options.bias] When using a distanceFunction, will indicate which point constraint takes priority when evaluating two points (0 for the lowest distance, 1 for the highest distance), defaults to 0\n * @param {function|null} [rng] RNG function, defaults to Math.random\n * @constructor\n */\nfunction PoissonDiskSampling (options, rng) {\n    this.shape = options.shape;\n\n    if (typeof options.distanceFunction === 'function') {\n        this.implementation = new VariableDensityPDS(options, rng);\n    } else {\n        this.implementation = new FixedDensityPDS(options, rng);\n    }\n}\n\nPoissonDiskSampling.prototype.implementation = null;\n\n/**\n * Add a totally random point in the grid\n * @returns {Array} The point added to the grid\n */\nPoissonDiskSampling.prototype.addRandomPoint = function () {\n    return this.implementation.addRandomPoint();\n};\n\n/**\n * Add a given point to the grid\n * @param {Array} point Point\n * @returns {Array|null} The point added to the grid, null if the point is out of the bound or not of the correct dimension\n */\nPoissonDiskSampling.prototype.addPoint = function (point) {\n    return this.implementation.addPoint(point);\n};\n\n/**\n * Try to generate a new point in the grid, returns null if it wasn't possible\n * @returns {Array|null} The added point or null\n */\nPoissonDiskSampling.prototype.next = function () {\n    return this.implementation.next();\n};\n\n/**\n * Automatically fill the grid, adding a random point to start the process if needed.\n * Will block the thread, probably best to use it in a web worker or child process.\n * @returns {Array[]} Sample points\n */\nPoissonDiskSampling.prototype.fill = function () {\n    return this.implementation.fill();\n};\n\n/**\n * Get all the points in the grid.\n * @returns {Array[]} Sample points\n */\nPoissonDiskSampling.prototype.getAllPoints = function () {\n    return this.implementation.getAllPoints();\n};\n\n/**\n * Get all the points in the grid along with the result of the distance function.\n * @throws Will throw an error if a distance function was not provided to the constructor.\n * @returns {Array[]} Sample points with their distance function result\n */\nPoissonDiskSampling.prototype.getAllPointsWithDistance = function () {\n    return this.implementation.getAllPointsWithDistance();\n};\n\n/**\n * Reinitialize the grid as well as the internal state\n */\nPoissonDiskSampling.prototype.reset = function () {\n    this.implementation.reset();\n};\n\nmodule.exports = PoissonDiskSampling;\n"},"lineCount":89}},"error":null,"hash":"086b4373e7c85f5e0621de79b57a2aa5","cacheData":{"env":{}}}