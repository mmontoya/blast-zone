{"id":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","dependencies":[{"name":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/package.json","includedInParent":true,"mtime":1611559171409},{"name":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/package.json","includedInParent":true,"mtime":1609219379102},{"name":"./../tiny-ndarray","loc":{"line":3,"column":26},"parent":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","resolved":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/tiny-ndarray.js"},{"name":"./../sphere-random","loc":{"line":4,"column":27},"parent":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","resolved":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/sphere-random.js"},{"name":"./../neighbourhood","loc":{"line":5,"column":31},"parent":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","resolved":"/Users/mmontoya/Desktop/Denis Coding/blast-typescript-app/node_modules/poisson-disk-sampling/src/neighbourhood.js"}],"generated":{"js":"\"use strict\";\n\nvar tinyNDArray = require('./../tiny-ndarray').integer,\n    sphereRandom = require('./../sphere-random'),\n    getNeighbourhood = require('./../neighbourhood');\n\n/**\n * Get the squared euclidean distance from two points of arbitrary, but equal, dimensions\n * @param {Array} point1\n * @param {Array} point2\n * @returns {number} Squared euclidean distance\n */\nfunction squaredEuclideanDistance (point1, point2) {\n    var result = 0,\n        i = 0;\n\n    for (; i < point1.length; i++) {\n        result += Math.pow(point1[i] - point2[i], 2);\n    }\n\n    return result;\n}\n\nconst epsilon = 2e-14;\n\n/**\n * FixedDensityPDS constructor\n * @param {object} options Options\n * @param {Array} options.shape Shape of the space\n * @param {float} options.minDistance Minimum distance between each points\n * @param {float} [options.maxDistance] Maximum distance between each points, defaults to minDistance * 2\n * @param {int} [options.tries] Number of times the algorithm will try to place a point in the neighbourhood of another points, defaults to 30\n * @param {function|null} [rng] RNG function, defaults to Math.random\n * @constructor\n */\nfunction FixedDensityPDS (options, rng) {\n    if (typeof options.distanceFunction === 'function') {\n        throw new Error('PoissonDiskSampling: Tried to instantiate the fixed density implementation with a distanceFunction');\n    }\n\n    this.shape = options.shape;\n    this.minDistance = options.minDistance;\n    this.maxDistance = options.maxDistance || options.minDistance * 2;\n    this.maxTries = Math.ceil(Math.max(1, options.tries || 30));\n\n    this.rng = rng || Math.random;\n\n    this.dimension = this.shape.length;\n    this.squaredMinDistance = this.minDistance * this.minDistance;\n    this.minDistancePlusEpsilon = this.minDistance + epsilon;\n    this.deltaDistance = Math.max(0, this.maxDistance - this.minDistancePlusEpsilon);\n    this.cellSize = this.minDistance / Math.sqrt(this.dimension);\n\n    this.neighbourhood = getNeighbourhood(this.dimension);\n\n    this.currentPoint = null;\n    this.processList = [];\n    this.samplePoints = [];\n\n    // cache grid\n\n    this.gridShape = [];\n\n    for (var i = 0; i < this.dimension; i++) {\n        this.gridShape.push(Math.ceil(this.shape[i] / this.cellSize));\n    }\n\n    this.grid = tinyNDArray(this.gridShape); //will store references to samplePoints\n}\n\nFixedDensityPDS.prototype.shape = null;\nFixedDensityPDS.prototype.dimension = null;\nFixedDensityPDS.prototype.minDistance = null;\nFixedDensityPDS.prototype.maxDistance = null;\nFixedDensityPDS.prototype.minDistancePlusEpsilon = null;\nFixedDensityPDS.prototype.squaredMinDistance = null;\nFixedDensityPDS.prototype.deltaDistance = null;\nFixedDensityPDS.prototype.cellSize = null;\nFixedDensityPDS.prototype.maxTries = null;\nFixedDensityPDS.prototype.rng = null;\nFixedDensityPDS.prototype.neighbourhood = null;\n\nFixedDensityPDS.prototype.currentPoint = null;\nFixedDensityPDS.prototype.processList = null;\nFixedDensityPDS.prototype.samplePoints = null;\nFixedDensityPDS.prototype.gridShape = null;\nFixedDensityPDS.prototype.grid = null;\n\n/**\n * Add a totally random point in the grid\n * @returns {Array} The point added to the grid\n */\nFixedDensityPDS.prototype.addRandomPoint = function () {\n    var point = new Array(this.dimension);\n\n    for (var i = 0; i < this.dimension; i++) {\n        point[i] = this.rng() * this.shape[i];\n    }\n\n    return this.directAddPoint(point);\n};\n\n/**\n * Add a given point to the grid\n * @param {Array} point Point\n * @returns {Array|null} The point added to the grid, null if the point is out of the bound or not of the correct dimension\n */\nFixedDensityPDS.prototype.addPoint = function (point) {\n    var dimension,\n        valid = true;\n\n    if (point.length === this.dimension) {\n        for (dimension = 0; dimension < this.dimension && valid; dimension++) {\n            valid = (point[dimension] >= 0 && point[dimension] <= this.shape[dimension]);\n        }\n    } else {\n        valid = false;\n    }\n\n    return valid ? this.directAddPoint(point) : null;\n};\n\n/**\n * Add a given point to the grid, without any check\n * @param {Array} point Point\n * @returns {Array} The point added to the grid\n * @protected\n */\nFixedDensityPDS.prototype.directAddPoint = function (point) {\n    var internalArrayIndex = 0,\n        stride = this.grid.stride,\n        dimension;\n\n    this.processList.push(point);\n    this.samplePoints.push(point);\n\n    for (dimension = 0; dimension < this.dimension; dimension++) {\n        internalArrayIndex += ((point[dimension] / this.cellSize) | 0) * stride[dimension];\n    }\n\n    this.grid.data[internalArrayIndex] = this.samplePoints.length; // store the point reference\n\n    return point;\n};\n\n/**\n * Check whether a given point is in the neighbourhood of existing points\n * @param {Array} point Point\n * @returns {boolean} Whether the point is in the neighbourhood of another point\n * @protected\n */\nFixedDensityPDS.prototype.inNeighbourhood = function (point) {\n    var dimensionNumber = this.dimension,\n        stride = this.grid.stride,\n        neighbourIndex,\n        internalArrayIndex,\n        dimension,\n        currentDimensionValue,\n        existingPoint;\n\n    for (neighbourIndex = 0; neighbourIndex < this.neighbourhood.length; neighbourIndex++) {\n        internalArrayIndex = 0;\n\n        for (dimension = 0; dimension < dimensionNumber; dimension++) {\n            currentDimensionValue = ((point[dimension] / this.cellSize) | 0) + this.neighbourhood[neighbourIndex][dimension];\n\n            if (currentDimensionValue < 0 || currentDimensionValue >= this.gridShape[dimension]) {\n                internalArrayIndex = -1;\n                break;\n            }\n\n            internalArrayIndex += currentDimensionValue * stride[dimension];\n        }\n\n        if (internalArrayIndex !== -1 && this.grid.data[internalArrayIndex] !== 0) {\n            existingPoint = this.samplePoints[this.grid.data[internalArrayIndex] - 1];\n\n            if (squaredEuclideanDistance(point, existingPoint) < this.squaredMinDistance) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n};\n\n/**\n * Try to generate a new point in the grid, returns null if it wasn't possible\n * @returns {Array|null} The added point or null\n */\nFixedDensityPDS.prototype.next = function () {\n    var tries,\n        angle,\n        distance,\n        currentPoint,\n        newPoint,\n        inShape,\n        i;\n\n    while (this.processList.length > 0) {\n        if (this.currentPoint === null) {\n            this.currentPoint = this.processList.shift();\n        }\n\n        currentPoint = this.currentPoint;\n\n        for (tries = 0; tries < this.maxTries; tries++) {\n            inShape = true;\n            distance = this.minDistancePlusEpsilon + this.deltaDistance * this.rng();\n\n            if (this.dimension === 2) {\n                angle = this.rng() * Math.PI * 2;\n                newPoint = [\n                    Math.cos(angle),\n                    Math.sin(angle)\n                ];\n            } else {\n                newPoint = sphereRandom(this.dimension, this.rng);\n            }\n\n            for (i = 0; inShape && i < this.dimension; i++) {\n                newPoint[i] = currentPoint[i] + newPoint[i] * distance;\n                inShape = (newPoint[i] >= 0 && newPoint[i] < this.shape[i])\n            }\n\n            if (inShape && !this.inNeighbourhood(newPoint)) {\n                return this.directAddPoint(newPoint);\n            }\n        }\n\n        if (tries === this.maxTries) {\n            this.currentPoint = null;\n        }\n    }\n\n    return null;\n};\n\n/**\n * Automatically fill the grid, adding a random point to start the process if needed.\n * Will block the thread, probably best to use it in a web worker or child process.\n * @returns {Array[]} Sample points\n */\nFixedDensityPDS.prototype.fill = function () {\n    if (this.samplePoints.length === 0) {\n        this.addRandomPoint();\n    }\n\n    while(this.next()) {}\n\n    return this.samplePoints;\n};\n\n/**\n * Get all the points in the grid.\n * @returns {Array[]} Sample points\n */\nFixedDensityPDS.prototype.getAllPoints = function () {\n    return this.samplePoints;\n};\n\n/**\n * Get all the points in the grid along with the result of the distance function.\n * @throws Will always throw an error.\n */\nFixedDensityPDS.prototype.getAllPointsWithDistance = function () {\n    throw new Error('PoissonDiskSampling: getAllPointsWithDistance() is not available in fixed-density implementation');\n};\n\n/**\n * Reinitialize the grid as well as the internal state\n */\nFixedDensityPDS.prototype.reset = function () {\n    var gridData = this.grid.data,\n        i = 0;\n\n    // reset the cache grid\n    for (i = 0; i < gridData.length; i++) {\n        gridData[i] = 0;\n    }\n\n    // new array for the samplePoints as it is passed by reference to the outside\n    this.samplePoints = [];\n\n    // reset the internal state\n    this.currentPoint = null;\n    this.processList.length = 0;\n};\n\nmodule.exports = FixedDensityPDS;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}}],"sources":{"node_modules/poisson-disk-sampling/src/implementations/fixed-density.js":"\"use strict\";\n\nvar tinyNDArray = require('./../tiny-ndarray').integer,\n    sphereRandom = require('./../sphere-random'),\n    getNeighbourhood = require('./../neighbourhood');\n\n/**\n * Get the squared euclidean distance from two points of arbitrary, but equal, dimensions\n * @param {Array} point1\n * @param {Array} point2\n * @returns {number} Squared euclidean distance\n */\nfunction squaredEuclideanDistance (point1, point2) {\n    var result = 0,\n        i = 0;\n\n    for (; i < point1.length; i++) {\n        result += Math.pow(point1[i] - point2[i], 2);\n    }\n\n    return result;\n}\n\nconst epsilon = 2e-14;\n\n/**\n * FixedDensityPDS constructor\n * @param {object} options Options\n * @param {Array} options.shape Shape of the space\n * @param {float} options.minDistance Minimum distance between each points\n * @param {float} [options.maxDistance] Maximum distance between each points, defaults to minDistance * 2\n * @param {int} [options.tries] Number of times the algorithm will try to place a point in the neighbourhood of another points, defaults to 30\n * @param {function|null} [rng] RNG function, defaults to Math.random\n * @constructor\n */\nfunction FixedDensityPDS (options, rng) {\n    if (typeof options.distanceFunction === 'function') {\n        throw new Error('PoissonDiskSampling: Tried to instantiate the fixed density implementation with a distanceFunction');\n    }\n\n    this.shape = options.shape;\n    this.minDistance = options.minDistance;\n    this.maxDistance = options.maxDistance || options.minDistance * 2;\n    this.maxTries = Math.ceil(Math.max(1, options.tries || 30));\n\n    this.rng = rng || Math.random;\n\n    this.dimension = this.shape.length;\n    this.squaredMinDistance = this.minDistance * this.minDistance;\n    this.minDistancePlusEpsilon = this.minDistance + epsilon;\n    this.deltaDistance = Math.max(0, this.maxDistance - this.minDistancePlusEpsilon);\n    this.cellSize = this.minDistance / Math.sqrt(this.dimension);\n\n    this.neighbourhood = getNeighbourhood(this.dimension);\n\n    this.currentPoint = null;\n    this.processList = [];\n    this.samplePoints = [];\n\n    // cache grid\n\n    this.gridShape = [];\n\n    for (var i = 0; i < this.dimension; i++) {\n        this.gridShape.push(Math.ceil(this.shape[i] / this.cellSize));\n    }\n\n    this.grid = tinyNDArray(this.gridShape); //will store references to samplePoints\n}\n\nFixedDensityPDS.prototype.shape = null;\nFixedDensityPDS.prototype.dimension = null;\nFixedDensityPDS.prototype.minDistance = null;\nFixedDensityPDS.prototype.maxDistance = null;\nFixedDensityPDS.prototype.minDistancePlusEpsilon = null;\nFixedDensityPDS.prototype.squaredMinDistance = null;\nFixedDensityPDS.prototype.deltaDistance = null;\nFixedDensityPDS.prototype.cellSize = null;\nFixedDensityPDS.prototype.maxTries = null;\nFixedDensityPDS.prototype.rng = null;\nFixedDensityPDS.prototype.neighbourhood = null;\n\nFixedDensityPDS.prototype.currentPoint = null;\nFixedDensityPDS.prototype.processList = null;\nFixedDensityPDS.prototype.samplePoints = null;\nFixedDensityPDS.prototype.gridShape = null;\nFixedDensityPDS.prototype.grid = null;\n\n/**\n * Add a totally random point in the grid\n * @returns {Array} The point added to the grid\n */\nFixedDensityPDS.prototype.addRandomPoint = function () {\n    var point = new Array(this.dimension);\n\n    for (var i = 0; i < this.dimension; i++) {\n        point[i] = this.rng() * this.shape[i];\n    }\n\n    return this.directAddPoint(point);\n};\n\n/**\n * Add a given point to the grid\n * @param {Array} point Point\n * @returns {Array|null} The point added to the grid, null if the point is out of the bound or not of the correct dimension\n */\nFixedDensityPDS.prototype.addPoint = function (point) {\n    var dimension,\n        valid = true;\n\n    if (point.length === this.dimension) {\n        for (dimension = 0; dimension < this.dimension && valid; dimension++) {\n            valid = (point[dimension] >= 0 && point[dimension] <= this.shape[dimension]);\n        }\n    } else {\n        valid = false;\n    }\n\n    return valid ? this.directAddPoint(point) : null;\n};\n\n/**\n * Add a given point to the grid, without any check\n * @param {Array} point Point\n * @returns {Array} The point added to the grid\n * @protected\n */\nFixedDensityPDS.prototype.directAddPoint = function (point) {\n    var internalArrayIndex = 0,\n        stride = this.grid.stride,\n        dimension;\n\n    this.processList.push(point);\n    this.samplePoints.push(point);\n\n    for (dimension = 0; dimension < this.dimension; dimension++) {\n        internalArrayIndex += ((point[dimension] / this.cellSize) | 0) * stride[dimension];\n    }\n\n    this.grid.data[internalArrayIndex] = this.samplePoints.length; // store the point reference\n\n    return point;\n};\n\n/**\n * Check whether a given point is in the neighbourhood of existing points\n * @param {Array} point Point\n * @returns {boolean} Whether the point is in the neighbourhood of another point\n * @protected\n */\nFixedDensityPDS.prototype.inNeighbourhood = function (point) {\n    var dimensionNumber = this.dimension,\n        stride = this.grid.stride,\n        neighbourIndex,\n        internalArrayIndex,\n        dimension,\n        currentDimensionValue,\n        existingPoint;\n\n    for (neighbourIndex = 0; neighbourIndex < this.neighbourhood.length; neighbourIndex++) {\n        internalArrayIndex = 0;\n\n        for (dimension = 0; dimension < dimensionNumber; dimension++) {\n            currentDimensionValue = ((point[dimension] / this.cellSize) | 0) + this.neighbourhood[neighbourIndex][dimension];\n\n            if (currentDimensionValue < 0 || currentDimensionValue >= this.gridShape[dimension]) {\n                internalArrayIndex = -1;\n                break;\n            }\n\n            internalArrayIndex += currentDimensionValue * stride[dimension];\n        }\n\n        if (internalArrayIndex !== -1 && this.grid.data[internalArrayIndex] !== 0) {\n            existingPoint = this.samplePoints[this.grid.data[internalArrayIndex] - 1];\n\n            if (squaredEuclideanDistance(point, existingPoint) < this.squaredMinDistance) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n};\n\n/**\n * Try to generate a new point in the grid, returns null if it wasn't possible\n * @returns {Array|null} The added point or null\n */\nFixedDensityPDS.prototype.next = function () {\n    var tries,\n        angle,\n        distance,\n        currentPoint,\n        newPoint,\n        inShape,\n        i;\n\n    while (this.processList.length > 0) {\n        if (this.currentPoint === null) {\n            this.currentPoint = this.processList.shift();\n        }\n\n        currentPoint = this.currentPoint;\n\n        for (tries = 0; tries < this.maxTries; tries++) {\n            inShape = true;\n            distance = this.minDistancePlusEpsilon + this.deltaDistance * this.rng();\n\n            if (this.dimension === 2) {\n                angle = this.rng() * Math.PI * 2;\n                newPoint = [\n                    Math.cos(angle),\n                    Math.sin(angle)\n                ];\n            } else {\n                newPoint = sphereRandom(this.dimension, this.rng);\n            }\n\n            for (i = 0; inShape && i < this.dimension; i++) {\n                newPoint[i] = currentPoint[i] + newPoint[i] * distance;\n                inShape = (newPoint[i] >= 0 && newPoint[i] < this.shape[i])\n            }\n\n            if (inShape && !this.inNeighbourhood(newPoint)) {\n                return this.directAddPoint(newPoint);\n            }\n        }\n\n        if (tries === this.maxTries) {\n            this.currentPoint = null;\n        }\n    }\n\n    return null;\n};\n\n/**\n * Automatically fill the grid, adding a random point to start the process if needed.\n * Will block the thread, probably best to use it in a web worker or child process.\n * @returns {Array[]} Sample points\n */\nFixedDensityPDS.prototype.fill = function () {\n    if (this.samplePoints.length === 0) {\n        this.addRandomPoint();\n    }\n\n    while(this.next()) {}\n\n    return this.samplePoints;\n};\n\n/**\n * Get all the points in the grid.\n * @returns {Array[]} Sample points\n */\nFixedDensityPDS.prototype.getAllPoints = function () {\n    return this.samplePoints;\n};\n\n/**\n * Get all the points in the grid along with the result of the distance function.\n * @throws Will always throw an error.\n */\nFixedDensityPDS.prototype.getAllPointsWithDistance = function () {\n    throw new Error('PoissonDiskSampling: getAllPointsWithDistance() is not available in fixed-density implementation');\n};\n\n/**\n * Reinitialize the grid as well as the internal state\n */\nFixedDensityPDS.prototype.reset = function () {\n    var gridData = this.grid.data,\n        i = 0;\n\n    // reset the cache grid\n    for (i = 0; i < gridData.length; i++) {\n        gridData[i] = 0;\n    }\n\n    // new array for the samplePoints as it is passed by reference to the outside\n    this.samplePoints = [];\n\n    // reset the internal state\n    this.currentPoint = null;\n    this.processList.length = 0;\n};\n\nmodule.exports = FixedDensityPDS;\n"},"lineCount":291}},"error":null,"hash":"3816a32539d6720dd2704463444acfea","cacheData":{"env":{}}}