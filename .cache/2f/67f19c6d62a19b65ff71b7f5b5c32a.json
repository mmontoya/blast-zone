{"id":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","dependencies":[{"name":"/Users/mmontoya/Desktop/my-typescript-app/package.json","includedInParent":true,"mtime":1609222223366},{"name":"/Users/mmontoya/Desktop/my-typescript-app/node_modules/poisson-disk-sampling/package.json","includedInParent":true,"mtime":1609219379102}],"generated":{"js":"\"use strict\";\n\nfunction tinyNDArrayOfInteger (gridShape) {\n    var dimensions = gridShape.length,\n        totalLength = 1,\n        stride = new Array(dimensions),\n        dimension;\n\n    for (dimension = dimensions; dimension > 0; dimension--) {\n        stride[dimension - 1] = totalLength;\n        totalLength = totalLength * gridShape[dimension - 1];\n    }\n\n    return {\n        stride: stride,\n        data: new Uint32Array(totalLength)\n    };\n}\n\nfunction tinyNDArrayOfArray (gridShape) {\n    var dimensions = gridShape.length,\n        totalLength = 1,\n        stride = new Array(dimensions),\n        data = [],\n        dimension, index;\n\n    for (dimension = dimensions; dimension > 0; dimension--) {\n        stride[dimension - 1] = totalLength;\n        totalLength = totalLength * gridShape[dimension - 1];\n    }\n\n    for (index = 0; index < totalLength; index++) {\n        data.push([]);\n    }\n\n    return {\n        stride: stride,\n        data: data\n    };\n}\n\nmodule.exports = {\n    integer: tinyNDArrayOfInteger,\n    array: tinyNDArrayOfArray\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/poisson-disk-sampling/src/tiny-ndarray.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}}],"sources":{"node_modules/poisson-disk-sampling/src/tiny-ndarray.js":"\"use strict\";\n\nfunction tinyNDArrayOfInteger (gridShape) {\n    var dimensions = gridShape.length,\n        totalLength = 1,\n        stride = new Array(dimensions),\n        dimension;\n\n    for (dimension = dimensions; dimension > 0; dimension--) {\n        stride[dimension - 1] = totalLength;\n        totalLength = totalLength * gridShape[dimension - 1];\n    }\n\n    return {\n        stride: stride,\n        data: new Uint32Array(totalLength)\n    };\n}\n\nfunction tinyNDArrayOfArray (gridShape) {\n    var dimensions = gridShape.length,\n        totalLength = 1,\n        stride = new Array(dimensions),\n        data = [],\n        dimension, index;\n\n    for (dimension = dimensions; dimension > 0; dimension--) {\n        stride[dimension - 1] = totalLength;\n        totalLength = totalLength * gridShape[dimension - 1];\n    }\n\n    for (index = 0; index < totalLength; index++) {\n        data.push([]);\n    }\n\n    return {\n        stride: stride,\n        data: data\n    };\n}\n\nmodule.exports = {\n    integer: tinyNDArrayOfInteger,\n    array: tinyNDArrayOfArray\n};"},"lineCount":45}},"error":null,"hash":"d7de8be15689bf81fb28fef7881fd8da","cacheData":{"env":{}}}